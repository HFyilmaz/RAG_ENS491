version: "3.9"
services:
  django:
    build:
      context: .
    container_name: django_app
    ports:
      - "8000:8000"  # Map host port 8000 to container port 8000
    depends_on:
      - elasticsearch  # Ensure Elasticsearch starts before Django
      - ollama        # Also depend on Ollama so it's available
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch:9200  # Use the service name
      - OLLAMA_API_BASE=http://ollama:11434            # (Optional) Pass the API endpoint for your integration
    volumes:
      - .:/app  # Mount project directory

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1-arm64  # Changed to ARM64 version
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-XX:UseSVE=0"
      - "CLI_JAVA_OPTS=-XX:UseSVE=0"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]  # Modified healthcheck
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ../../RAG-FRONTEND/chatbot
    container_name: frontend_app
    ports:
      - "80:80"
    depends_on:
      - django

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama  # Persist models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  es_data:
  ollama_models:
